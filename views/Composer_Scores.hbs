{{!--
Authors: Erin McBride and Blake Jennings
Updated on 03/18/2024
CS_340 Group 170
Citation for the following file:
    Date: various throughout 2/2024 and 3/2024
    Adapted from nodejs-start-app provided on git
    Some baseline hbs code was copied over, then expanded upon to fit our page.
    Source URL: https://github.com/osu-cs340-ecampus/nodejs-starter-app
    Source Authors: George Kochera, Michael Curry, Cortona1, dmgs11

    Date: 3/14/2024
    Adapted from Mozilla mdn web docs with entity and attribute names and minor restructing
    Source URL: https://developer.mozilla.org/en-US/docs/Web/API/Document/DOMContentLoaded_event
 --}}

{{!-- Taken from nodejs-start-app provided on git --}}
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>


<h1>Composer Scores:</h1>

{{!-- Create a table --}}
{{!-- Modified from nodejs-start-app provided on git --}}
<table id="ComposerScores">

    {{!-- Header section --}}
    {{!-- Taken from nodejs-start-app provided on git --}}
    <thead>
        <tr>
            <th>Composer Score ID:</th>
            <th>Composer ID:</th>
            <th>Score ID:</th>
            <th>Delete</th>
        </tr>
    </thead>

    {{!-- Body section --}}
    {{!-- Updated from nodejs-start-app provided on git --}}
    <tbody>

        {{#each data}}
        <tr> 
            {{!-- Modified to show selected attributes --}}
            <td>{{this.composerScoreID}}</td>
            <td>{{this.composerID}} - {{this.composerFirst}} {{this.composerLast}}</td>
            <td>{{this.scoreID}} - {{this.scoreName}}</td>
            <td><button onclick="deleteComposerScore({{this.composerScoreID}})">Delete</button></td>
        </tr>
        {{/each}}
    </tbody>
</table>
<script src="./js/delete_composer_score.js"></script>

{{!-- Form to add a composer score entity to the table  --}}
{{!-- Modified from nodejs-start-app provided on git --}}
<p></p>

<h2>Add Composer Score:</h2>
<form id="add-composer-score-form-ajax">
    <label for="input-composer-id">Composer ID: </label>
    <select name="input-composer-id" id="input-composer-id-ajax">
    <option value="">Select Composer ID</option>
    {{#each composers}}
    <option value="{{this.composerID}}">{{this.composerID}} - {{this.composerFirst}} {{this.composerLast}}</option>
    {{/each}}
    </select>
    
    <label for="input-score-id">Score: </label>
    <select name="input-score-id" id="input-score-id-ajax">
    <option value="">Select Score</option>
    {{#each scores}}
    <option value="{{this.scoreID}}">{{this.scoreID}} - {{this.scoreName}}</option>
    {{/each}}
    </select>
    <input type="submit">
</form>
<script src="./js/add_composer_score.js"></script>

<p></p>

{{!-- Form to update a composer score entity in the table  --}}
{{!-- Modified from nodejs-start-app provided on git --}}
<h2>Update Composer Score:</h2>
<form id="update-composer-score-form-ajax">

    <label for="input-composer-score-id">Composer Score ID: </label>
    <select name="input-composer-score-id" id="mySelect-composer-score-id">
        <option value="test">Select Composer Score ID</option>
        {{#each data}}
        <option value="{{this.composerScoreID}}">{{this.composerScoreID}}</option>
        {{/each}}
    </select>

    <label for="input-composer-id">Composer: </label>
    <select name="input-composer-id" id="input-composer-id-update">
        <option value="">Select Composer</option>
        {{#each composers}}
        <option value="{{this.composerID}}">{{this.composerID}} - {{this.composerFirst}} {{this.composerLast}}</option>
        {{/each}}
    </select>

    <label for="input-score-id">Score: </label>
    <select name="input-score-id" id="input-score-id-update">
        <option value="">Select Score</option>
        {{#each scores}}
        <option value="{{this.scoreID}}">{{this.scoreID}} - {{this.scoreName}}</option>
        {{/each}}
    </select>

    <input type="submit">

</form>
{{!-- Modified from nodejs-start-app provided on git --}}
<script src="./js/update_composer_score.js"></script>


{{!-- Script to search for a composer score entity in the table  --}}
{{!-- Adapted from Mozilla mdn web docs --}}
<script>
document.addEventListener('DOMContentLoaded', function() {
    const composerScoreSelect = document.getElementById('mySelect-composer-score-id');
    composerScoreSelect.addEventListener('change', function() {
        const composerScoreID = this.value;
        fetch(`get-composer-score-info?composerScoreID=${composerScoreID}`)
        .then(response => response.json())
        .then(composerScore => {
            document.getElementById('input-composer-id-update').value = composerScore.composerID || '';
            document.getElementById('input-score-id-update').value = composerScore.scoreID || '';         
        })
        .catch(error => console.error('Error fetching composer score', error));
    });
});
</script>
