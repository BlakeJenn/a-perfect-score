{{!--
Authors: Erin McBride and Blake Jennings
Updated on 03/17/2024
CS_340 Group 170
Citation for the following file:
   Date: 3/18/2024
   Adapted from nodejs-start-app provided on git
   Some baseline hbs code was copied over, then expanded upon to fit our page.
   Source URL: https://github.com/osu-cs340-ecampus/nodejs-starter-app
   Source Authors: George Kochera, Michael Curry, Cortona1, dmgs11

   Date: 3/14/2024
   Adapted from Mozilla mdn web docs with entity and attribute names and minor restructing
   Source URL: https://developer.mozilla.org/en-US/docs/Web/API/Document/DOMContentLoaded_event
 --}}

{{!-- Taken from nodejs-start-app provided on git --}}
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>


<h1>Order Scores:</h1>

{{!-- Create a table --}}
{{!-- Modified from nodejs-start-app provided on git --}}
<table id="order-scores">

    {{!-- Header section --}}
    {{!-- Taken from nodejs-start-app provided on git --}}
    <thead>
        <tr>
            <th>Order Score ID:</th>
            <th>Order ID:</th>
            <th>Score ID:</th>
            <th>Quantity:</th>
            <th>Format:</th>
            <th>Delete</th>
        </tr>
    </thead>

    {{!-- Body section --}}
    {{!-- Updated from nodejs-start-app provided on git --}}
    <tbody>

        {{#each data}}
        <tr>
            <td>{{this.orderScoreID}}</td>
            <td>{{this.orderID}}</td>
            <td>{{this.scoreID}} - {{this.scoreName}}</td>
            <td>{{this.quantity}}</td>
            <td>{{this.scoreType}}</td>
            <td><button onclick="deleteOrderScore({{this.orderScoreID}})">Delete</button></td>
        </tr>
        {{/each}}
    </tbody>
</table>
<script src="./js/delete_order_score.js"></script>

<p></p>

{{!-- Form to search for an Order Score in the table  --}}
{{!-- Modified from nodejs-start-app provided on git --}}
<h2>Search by Score Name:</h2>
<form id="search-score-html" method='GET' action='/Order_Scores'>
    <label for="input-score-id">Search by Score name: </label>
    <select name="input-score-id" id="input-score-html-search">
    <option value="">Select Score</option>
    {{#each scores}}
    <option value="{{this.scoreID}}">{{this.scoreID}} - {{this.scoreName}}</option>
    {{/each}}
    </select>
    
    {{!-- Taken from nodejs-start-app provided on git --}}
    <input type="submit">
    <a href='/'><button>Reset</button></a>
</form>

<p></p>

{{!-- Form to add an Order Score to the table  --}}
{{!-- Modified from nodejs-start-app provided on git --}}
<h2>Add Order Score:</h2>
<form id="add-order-score-form-ajax">
    <label for="input-order-id">Order ID: </label>
    <select name="input-order-id" id="input-order-id-ajax">
    <option value="">Select Order ID</option>
    {{#each orders}}
    <option value="{{this.orderID}}">{{this.orderID}}</option>
    {{/each}}
    </select>
    
    <label for="input-score-id">Score: </label>
    <select name="input-score-id" id="input-score-id-ajax">
    <option value="">Select Score</option>
    {{#each scores}}
    <option value="{{this.scoreID}}">{{this.scoreID}} - {{this.scoreName}}</option>
    {{/each}}
    </select>
 
    <label for="input-quantity">Quantity: </label>
    <input type="number" name="input-quantity" id="input-quantity-ajax">

    <label for="input-score-type">Score Type: </label>
    <select name="input-score-type" id="input-score-type-ajax">
        <option value="paper">Paperback</option>
        <option value="hard">Hardcover</option>
        <option value="digital">Digital Download</option>
    </select>
    <input type="submit">
</form>
<script src="./js/add_order_score.js"></script>

<p></p>

{{!-- Form to update an Order Score in the table  --}}
{{!-- Modified from nodejs-start-app provided on git --}}
<h2>Update Order Score:</h2>
<form id="update-order-score-form-ajax">

    <label for="input-order-score-id">Order Score ID: </label>
    <select name="input-order-score-id" id="mySelect">
        <option value="test">Select an Order Score</option>
        {{#each data}}
        <option value="{{this.orderScoreID}}">{{this.orderScoreID}}</option>
        {{/each}}
    </select>

    <label for="input-order-id">Order: </label>
    <select name="input-order-id" id="input-order-id-update">
        <option value="">Select Order ID:</option>
        {{#each orders}}
        <option value="{{this.orderID}}">{{this.orderID}}</option>
        {{/each}}
    </select>

    <label for="input-score-id">Score: </label>
    <select name="input-score-id" id="input-score-id-update">
        <option value="">Select Score</option>
        {{#each scores}}
        <option value="{{this.scoreID}}">{{this.scoreID}} - {{this.scoreName}}</option>
        {{/each}}
    </select>

    <label for="input-score-quantity">Quantity: </label>
    <input type="number" name="input-quantity" id="input-score-quantity-update" min="0">


    <label for="input-score-type">Score Type: </label>
    <select name="input-score-type" id="input-score-type-update">
        <option value="paper">Paperback</option>
        <option value="hard">Hardcover</option>
        <option value="digital">Digital Download</option>
    </select>

    <input type="submit">

</form>
{{!-- Modified from nodejs-start-app provided on git --}}
<script src="./js/update_order_score.js"></script>

{{!-- Script to search for an Order Score in the table  --}}
{{!-- Adapted from Mozilla mdn web docs --}}
<script>
document.addEventListener('DOMContentLoaded', function() {
    const osSelect = document.getElementById('mySelect');
    osSelect.addEventListener('change', function() {
        const orderScoreID = this.value;
        fetch(`get-order-score-info?orderScoreID=${orderScoreID}`)
        .then(response => response.json())
        .then(os => {
            document.getElementById('input-order-id-update').value = os.orderID || '';
            document.getElementById('input-score-id-update').value = os.scoreID || '';
            document.getElementById('input-score-quantity-update').value = os.quantity || '';
            document.getElementById('input-score-type-update').value = os.scoreType || '';          
        })
        .catch(error => console.error('Error fetching Order Score', error));
    });
});
</script>